<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL Server on RoosTech</title>
    <link>http://test.roostech.se/tags/sql-server/</link>
    <description>Recent content in SQL Server on RoosTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Jul 2015 14:14:00 +0200</lastBuildDate><atom:link href="http://test.roostech.se/tags/sql-server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Simple select from database with PowerShell</title>
      <link>http://test.roostech.se/posts/simple-select-from-database-with-powershell/</link>
      <pubDate>Tue, 14 Jul 2015 14:14:00 +0200</pubDate>
      
      <guid>http://test.roostech.se/posts/simple-select-from-database-with-powershell/</guid>
      <description>There are a few ways of getting data from SQL Server in PowerShell. This is one way of doing it which is quite simple and does not require the SQL Server module. The sample below shows how to get started. If you are planning on creating a script for serious use you need to add error handling and investigate a bit more what each line actually does so that you are in full control.</description>
    </item>
    
    <item>
      <title>Powershell script: Write object to SQL</title>
      <link>http://test.roostech.se/posts/powershell-script-write-object-to-sql/</link>
      <pubDate>Sun, 01 Feb 2015 14:14:00 +0200</pubDate>
      
      <guid>http://test.roostech.se/posts/powershell-script-write-object-to-sql/</guid>
      <description>A while ago I was playing around with PowerShell, gathering information from a lot of servers and I felt that I needed to have a simple way of storing that information in a database. I could have written my own T-SQL statements for creating the tables and then do the inserts in the powerShell scripts I was playing around with. But that felt like it would just take time so I started to think about a function that would just accept any object and do the magic of creating a table and then inserting anything I piped to it.</description>
    </item>
    
  </channel>
</rss>
